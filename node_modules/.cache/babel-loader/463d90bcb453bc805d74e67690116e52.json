{"ast":null,"code":"import { CLEAR_BASKET, REMOVE_FROM_BASKET, UPDATE_PRODUCT_QTY } from '../actions/basketActionTypes';\nconst initialState = {\n  productDetails: [{\n    id: 'md001',\n    name: 'Mountain Dew',\n    price: 1.80\n  }, {\n    id: 'des001',\n    name: 'Desperados',\n    price: 2.58\n  }, {\n    id: 'jd001',\n    name: 'Jack Daniels Dew',\n    price: 3.35\n  }],\n  addedProducts: [{\n    productId: 'md001',\n    qty: 2\n  }, {\n    productId: 'des001',\n    qty: 6\n  }, {\n    productId: 'jd001',\n    qty: 4\n  }]\n};\n\nfunction basketReducer(state = initialState, action) {\n  switch (action.type) {\n    case CLEAR_BASKET:\n      return { ...state,\n        addedProducts: []\n      };\n\n    case REMOVE_FROM_BASKET:\n      const withRemovedProduct = state.addedProducts.filter(item => item.productId !== action.payload.productId);\n      return { ...state,\n        addedProducts: withRemovedProduct\n      };\n\n    case UPDATE_PRODUCT_QTY:\n      const withUpdatedQty = state.addedProducts.map(item => {\n        if (item.productId === action.payload.productId) {\n          return {\n            productId: action.payload.productId,\n            qty: action.payload.qty\n          };\n        } else {\n          return item;\n        }\n      });\n      return { ...state,\n        addedProducts: withUpdatedQty\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default basketReducer;\nexport const getBasketContents = state => {\n  let totalCost = 0;\n  const addedProducts = state.basket.productDetails.filter(product => {\n    return state.basket.addedProducts.find(addedProduct => {\n      if (product.id === addedProduct.productId) {\n        product.qty = addedProduct.qty;\n        product.totalPrice = addedProduct.qty * product.price;\n        totalCost += product.totalPrice;\n        return true;\n      } else {\n        return false;\n      }\n    });\n  });\n  return {\n    addedProducts,\n    totalCost\n  };\n};","map":{"version":3,"sources":["/Users/awaismuzaffar/Projects/react-basket-demo/src/reducers/basketReducer.js"],"names":["CLEAR_BASKET","REMOVE_FROM_BASKET","UPDATE_PRODUCT_QTY","initialState","productDetails","id","name","price","addedProducts","productId","qty","basketReducer","state","action","type","withRemovedProduct","filter","item","payload","withUpdatedQty","map","getBasketContents","totalCost","basket","product","find","addedProduct","totalPrice"],"mappings":"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","sourcesContent":["import { CLEAR_BASKET, REMOVE_FROM_BASKET, UPDATE_PRODUCT_QTY } from '../actions/basketActionTypes';\n\nconst initialState = {\n    productDetails: [\n      { \n          id: 'md001',\n          name: 'Mountain Dew',\n          price: 1.80\n      },\n      { \n          id: 'des001',\n          name: 'Desperados',\n          price: 2.58\n      },\n      { \n          id: 'jd001',\n          name: 'Jack Daniels Dew',\n          price: 3.35\n      }\n    ],\n    addedProducts: [\n      {\n          productId: 'md001',\n          qty: 2,\n      },\n      {\n          productId: 'des001',\n          qty: 6,\n      },\n      {\n          productId: 'jd001',\n          qty: 4,\n      },\n    ]\n};\n  \nfunction basketReducer(state = initialState, action) {\n\n  switch (action.type) {\n\n    case CLEAR_BASKET:\n\n      return {\n        ...state,\n        addedProducts: []\n      };\n\n    case REMOVE_FROM_BASKET:\n\n      const withRemovedProduct = state.addedProducts.filter(item => item.productId !== action.payload.productId);\n\n      return {\n        ...state,\n        addedProducts: withRemovedProduct\n      };\n\n    case UPDATE_PRODUCT_QTY:\n      \n      const withUpdatedQty = state.addedProducts.map(item => {\n        if (item.productId === action.payload.productId) {\n          return {\n            productId: action.payload.productId,\n            qty: action.payload.qty\n          }\n        } else {\n          return item;\n        }\n      });\n      \n      return {\n        ...state,\n        addedProducts: withUpdatedQty\n      };\n    default:\n      return state\n  }\n}\n\nexport default basketReducer;\n\nexport const getBasketContents = (state) => {\n  \n  let totalCost = 0;\n\n  const addedProducts = state.basket.productDetails.filter(product => {\n\n    return state.basket.addedProducts.find(addedProduct => {\n\n      if (product.id === addedProduct.productId) {\n\n        product.qty = addedProduct.qty;\n        product.totalPrice = addedProduct.qty * product.price;\n        totalCost += product.totalPrice;\n\n        return true;\n      } else {\n        \n        return false;\n      }\n    });\n  });\n\n  return { addedProducts, totalCost };\n};"]},"metadata":{},"sourceType":"module"}